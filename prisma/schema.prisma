// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
  MANAGER
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  age       Int
  password  String
  role      UserRole @default(CUSTOMER)
  tenantId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation Field
  refreshTokens RefreshToken[]
  tenant        Tenant?         @relation(fields: [tenantId], references: [id])

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  expiresAt DateTime
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation Field
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model Tenant {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100) // Limit the name to 100 character
  address   String   @db.VarChar(255) // Limit the address to 255 character
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation Field
  User User[]

  @@map("tenants")
}
